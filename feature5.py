# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'feature5.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import random
import os
import pymysql
def get_conn():
    conn = pymysql.connect(host='localhost', port=3306, user='root', passwd='root', db='test1')
    return conn

def insert(sql, args):
    conn = get_conn()
    cur = conn.cursor()
    result = cur.execute(sql, args)
    conn.commit()
    cur.close()
    conn.close()
def query(sql,args):
    conn = get_conn()
    cur = conn.cursor()
    cur.execute(sql,args)
    results = cur.fetchall()
    conn.commit()
    cur.close()
    conn.close()
    if results: #已存在 不可添加数据
        return False
    else:#未存在，可以添加数据
        return True


class Ui_window_feature5(object):
    def setupUi(self, window_feature5):
        window_feature5.setObjectName("window_feature5")
        window_feature5.resize(510, 600)
        self.label_title = QtWidgets.QLabel(window_feature5)
        self.label_title.setGeometry(QtCore.QRect(25, 180, 460, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.label_tip = QtWidgets.QLabel(window_feature5)
        self.label_tip.setGeometry(QtCore.QRect(60, 240, 390, 30))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_tip.setFont(font)
        self.label_tip.setObjectName("label_tip")
        self.label_tip_2 = QtWidgets.QLabel(window_feature5)
        self.label_tip_2.setGeometry(QtCore.QRect(120, 270, 260, 30))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_tip_2.setFont(font)
        self.label_tip_2.setObjectName("label_tip_2")
        self.pushButton_select = QtWidgets.QPushButton(window_feature5)
        self.pushButton_select.setGeometry(QtCore.QRect(195, 350, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.pushButton_select.setFont(font)
        self.pushButton_select.setObjectName("pushButton_select")

        # 选择文件
        self.filename = ""
        self.pushButton_select.clicked.connect(lambda: self.select_file(window_feature5))

        self.retranslateUi(window_feature5)
        QtCore.QMetaObject.connectSlotsByName(window_feature5)

    def retranslateUi(self, window_feature5):
        _translate = QtCore.QCoreApplication.translate
        window_feature5.setWindowTitle(_translate("window_feature5", "Form"))
        self.label_title.setText(_translate("window_feature5", "智能批量生成带数据分析功能的防伪码"))
        self.label_tip.setText(_translate("window_feature5", "提示：文件中请用英文“,”分隔数据分析码"))
        self.label_tip_2.setText(_translate("window_feature5", "和生产数量，每一批次占一行"))
        self.pushButton_select.setText(_translate("window_feature5", "选择文件"))

    def select_file(self, window_feature5):
        # directory = QtWidgets.QFileDialog.getOpenFileName(window_feature5, "选取文件", "./", "Text Files (*.mri)")  # 起始路径
        
        directory = QtWidgets.QFileDialog.getOpenFileName(window_feature5, "选取文件", "./", "文本文件 (*.txt)、*.txt")
        self.filename = directory[0]

        scode_count_num = []
        scode_analysis_num = []
        count = 0
        with open(self.filename, 'r') as f:
            lines = f.readlines()
            for line in lines:
                count = count + 1
                scode_analysis_num.append(line.split(',')[0])
                scode_count_num.append(int(line.split(',')[1]))
        for i in range(count):
            # 判断是否存在防伪码保存的文件夹，如果没有则生成
            if not os.path.exists("codepath"):
                os.mkdir("codepath")
            count_num = scode_count_num[i]
            analysis_num = scode_analysis_num[i]
            if int(count_num) == 0:
                QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "产品数量错误！", QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
            elif len(analysis_num) != 3:
                QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "数据分析编号存在错误错误，请检查！",
                                              QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
            else:
                # 将分析码全部转换为大写
                analysis_num_upper = analysis_num[0].upper() \
                                           + analysis_num[1].upper() \
                                           + analysis_num[2].upper()
                # 生成防伪码
                scodestr = []
                for i in range(count_num):
                    # 产生随机插入分析编号的位置
                    insert_address = sorted(random.sample("0123456789", 3))
                    for i in range(3):
                        insert_address[i] = int(insert_address[i])

                    temp = ''
                    for j in range(9):
                        temp = temp + chr(random.randrange(ord('0'), ord('9') + 1))
                    temp = temp[0:insert_address[0]] + analysis_num_upper[0] \
                           + temp[insert_address[0]:insert_address[1]] + analysis_num_upper[1] \
                           + temp[insert_address[1]:insert_address[2]] + analysis_num_upper[2] \
                           + temp[insert_address[2]:]
                    sql = 'SELECT * FROM fangweima4 WHERE code='+'\''+temp+'\''
                    check = query(sql,None)
                    if check: #检查后可以添加 数据库加入  新生成的文件中加入
                        sql = 'INSERT INTO fangweima4 VALUES(%s);'
                        insert(sql,temp)
                        scodestr.append(temp)
                # 打开文件并写入防伪码
                with open("codepath/" + analysis_num_upper + "scode-feature5.txt", 'w') as f:
                    for item in scodestr:
                        f.write(item + '\n')
        # 提示用户生成成功
        tip_sentence = "已智能批量生成含数据分析功能的防伪码共计：" \
                       + str(sum(scode_count_num)) \
                       + "\n防伪码文件位于“codepath”文件夹下\n请及时备份以防文件被覆盖\n"
        QtWidgets.QMessageBox.information(QtWidgets.QWidget(), "提示", tip_sentence, QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)