# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'feature7.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from pystrich.ean13 import EAN13Encoder

import os
import random

class Ui_window_feature7(object):
    def setupUi(self, window_feature7):
        window_feature7.setObjectName("window_feature7")
        window_feature7.resize(510, 600)
        self.label_title = QtWidgets.QLabel(window_feature7)
        self.label_title.setGeometry(QtCore.QRect(105, 130, 300, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.lineEdit_codenum = QtWidgets.QLineEdit(window_feature7)
        self.lineEdit_codenum.setGeometry(QtCore.QRect(370, 200, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum.setFont(font)
        self.lineEdit_codenum.setText("")
        self.lineEdit_codenum.setObjectName("lineEdit_codenum")
        self.lineEdit_codenum.setValidator(QtGui.QIntValidator())
        self.label_tip = QtWidgets.QLabel(window_feature7)
        self.label_tip.setGeometry(QtCore.QRect(20, 200, 351, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip.setFont(font)
        self.label_tip.setObjectName("label_tip")
        self.lineEdit_codenum_2 = QtWidgets.QLineEdit(window_feature7)
        self.lineEdit_codenum_2.setGeometry(QtCore.QRect(370, 250, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum_2.setFont(font)
        self.lineEdit_codenum_2.setText("")
        self.lineEdit_codenum_2.setObjectName("lineEdit_codenum_2")
        self.lineEdit_codenum_2.setValidator(QtGui.QIntValidator())
        self.label_tip_2 = QtWidgets.QLabel(window_feature7)
        self.label_tip_2.setGeometry(QtCore.QRect(20, 250, 270, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip_2.setFont(font)
        self.label_tip_2.setObjectName("label_tip_2")
        self.lineEdit_codenum_3 = QtWidgets.QLineEdit(window_feature7)
        self.lineEdit_codenum_3.setGeometry(QtCore.QRect(370, 300, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum_3.setFont(font)
        self.lineEdit_codenum_3.setText("")
        self.lineEdit_codenum_3.setObjectName("lineEdit_codenum_3")
        self.lineEdit_codenum_3.setValidator(QtGui.QIntValidator())
        self.label_tip_3 = QtWidgets.QLabel(window_feature7)
        self.label_tip_3.setGeometry(QtCore.QRect(20, 300, 351, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip_3.setFont(font)
        self.label_tip_3.setObjectName("label_tip_3")
        self.pushButton_create = QtWidgets.QPushButton(window_feature7)
        self.pushButton_create.setGeometry(QtCore.QRect(205, 400, 100, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.pushButton_create.setFont(font)
        self.pushButton_create.setObjectName("pushButton_create")

        # 生成
        self.pushButton_create.clicked.connect(lambda: self.create())

        self.retranslateUi(window_feature7)
        QtCore.QMetaObject.connectSlotsByName(window_feature7)

    def retranslateUi(self, window_feature7):
        _translate = QtCore.QCoreApplication.translate
        window_feature7.setWindowTitle(_translate("window_feature7", "Form"))
        self.label_title.setText(_translate("window_feature7", "EAN-13条形码批量输出"))
        self.label_tip.setText(_translate("window_feature7", "请输入EN13的国家代码（3位）："))
        self.label_tip_2.setText(_translate("window_feature7", "请输入企业代码（4位）："))
        self.label_tip_3.setText(_translate("window_feature7", "请输入需要生成的条形码数量："))
        self.pushButton_create.setText(_translate("window_feature7", "生成"))

    def create(self):
        country_id = self.lineEdit_codenum.text()  # 国家代码
        company_id = self.lineEdit_codenum_2.text()  # 企业代码
        barcode_count_num = self.lineEdit_codenum_3.text()
        # 数据缺失
        if len(country_id) == 0 or len(company_id) == 0 or len(barcode_count_num) == 0:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "请填写所需的所有信息！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        # 未输入3位数字的EAN13国家代码
        elif len(country_id) != 3 or not country_id.isdigit():
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "请输入3位数字组成的EAN13国家编号！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        # 未输入4位数字的企业代码
        elif len(company_id) != 4 or not company_id.isdigit():
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "请输入4位数字组成的企业编号！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        # 产品数量为0
        elif int(barcode_count_num) == 0:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "数量错误！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        else:
            # 判断是否存在条形码保存的文件夹，如果没有则生成
            if not os.path.exists("barcode"):
                os.mkdir("barcode")
            for i in range(int(barcode_count_num)):
                temp = ''
                for j in range(5):
                    temp = temp + chr(random.randrange(ord('0'), ord('9') + 1))
                barcode = country_id + company_id + temp
                # 计算校验位
                evensum = int(barcode[1]) + int(barcode[3]) + int(barcode[5]) + int(barcode[7]) + int(barcode[9]) + int(barcode[11])
                oddsum = int(barcode[0]) + int(barcode[2]) + int(barcode[4]) + int(barcode[6]) + int(barcode[8]) + int(barcode[10])
                checkbit = int((10 - (evensum * 3 + oddsum) % 10) % 10)
                # 将校验位加入到条形码中
                barcode = barcode + str(checkbit)
                # 生成条形码并保存
                encoder = EAN13Encoder(barcode)
                encoder.save('barcode/' + barcode + ".png")
            tip_sentence = "已生成条形码共计：" \
                           + str(int(barcode_count_num)) \
                           + "\n防伪码文件位于“barcode”文件夹下\n请及时备份以防文件被覆盖\n"
            QtWidgets.QMessageBox.information(QtWidgets.QWidget(), "提示", tip_sentence, QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)