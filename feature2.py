# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'feature2.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import os
import random
import pymysql
def get_conn():
    conn = pymysql.connect(host='localhost', port=3306, user='root', passwd='root', db='test1')
    return conn

def insert(sql, args):
    conn = get_conn()
    cur = conn.cursor()
    result = cur.execute(sql, args)
    conn.commit()
    cur.close()
    conn.close()
def query(sql,args):
    conn = get_conn()
    cur = conn.cursor()
    cur.execute(sql,args)
    results = cur.fetchall()
    conn.commit()
    cur.close()
    conn.close()
    if results: #已存在 不可添加数据
        return False
    else:#未存在，可以添加数据
        return True


class Ui_window_feature2(object):
    def setupUi(self, window_feature2):
        window_feature2.setObjectName("window_feature2")
        window_feature2.resize(510, 600)
        self.label_title = QtWidgets.QLabel(window_feature2)
        self.label_title.setGeometry(QtCore.QRect(95, 120, 320, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.label_title_2 = QtWidgets.QLabel(window_feature2)
        self.label_title_2.setGeometry(QtCore.QRect(155, 160, 200, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_title_2.setFont(font)
        self.label_title_2.setObjectName("label_title_2")
        self.lineEdit_codenum = QtWidgets.QLineEdit(window_feature2)
        self.lineEdit_codenum.setGeometry(QtCore.QRect(350, 210, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum.setFont(font)
        self.lineEdit_codenum.setObjectName("lineEdit_codenum")
        self.lineEdit_codenum.setValidator(QtGui.QIntValidator())
        self.label_tip = QtWidgets.QLabel(window_feature2)
        self.label_tip.setGeometry(QtCore.QRect(30, 210, 310, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip.setFont(font)
        self.label_tip.setObjectName("label_tip")
        self.lineEdit_codenum_2 = QtWidgets.QLineEdit(window_feature2)
        self.lineEdit_codenum_2.setGeometry(QtCore.QRect(350, 270, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum_2.setFont(font)
        self.lineEdit_codenum_2.setObjectName("lineEdit_codenum_2")
        self.lineEdit_codenum_2.setValidator(QtGui.QIntValidator())
        self.label_tip_2 = QtWidgets.QLabel(window_feature2)
        self.label_tip_2.setGeometry(QtCore.QRect(30, 270, 151, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip_2.setFont(font)
        self.label_tip_2.setObjectName("label_tip_2")
        self.label_tip_3 = QtWidgets.QLabel(window_feature2)
        self.label_tip_3.setGeometry(QtCore.QRect(30, 330, 201, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip_3.setFont(font)
        self.label_tip_3.setObjectName("label_tip_3")
        self.lineEdit_codenum_3 = QtWidgets.QLineEdit(window_feature2)
        self.lineEdit_codenum_3.setGeometry(QtCore.QRect(350, 330, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum_3.setFont(font)
        self.lineEdit_codenum_3.setObjectName("lineEdit_codenum_3")
        self.lineEdit_codenum_3.setValidator(QtGui.QIntValidator())
        self.pushButton_create = QtWidgets.QPushButton(window_feature2)
        self.pushButton_create.setGeometry(QtCore.QRect(205, 410, 100, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.pushButton_create.setFont(font)
        self.pushButton_create.setObjectName("pushButton_create")

        # 生成
        self.pushButton_create.clicked.connect(lambda: self.create())

        self.retranslateUi(window_feature2)
        QtCore.QMetaObject.connectSlotsByName(window_feature2)

    def retranslateUi(self, window_feature2):
        _translate = QtCore.QCoreApplication.translate
        window_feature2.setWindowTitle(_translate("window_feature2", "Form"))
        self.label_title.setText(_translate("window_feature2", "9位系列产品数字防伪编码"))
        self.label_title_2.setText(_translate("window_feature2", "（879-335439型）"))
        self.label_tip.setText(_translate("window_feature2", "系列产品起始号（3位数字）："))
        self.label_tip_2.setText(_translate("window_feature2", "系列产品总数："))
        self.label_tip_3.setText(_translate("window_feature2", "单个系列产品总数："))
        self.pushButton_create.setText(_translate("window_feature2", "生成"))

    def create(self):
        series_start_num = self.lineEdit_codenum.text()  # 系列起始号
        series_count_num = self.lineEdit_codenum_2.text()  # 系列数量
        scode_count_num = self.lineEdit_codenum_3.text()  # 单个系列防伪码数量
        # 判断输入数据是否违规
        # 数据缺失
        if len(series_start_num) == 0 or len(series_count_num) == 0 or len(scode_count_num) == 0:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "请填写所需的所有信息！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        # 未输入3位数字的系列号
        elif len(series_start_num) != 3:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "请输入3位数字的系列号！", QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
        # 系列数量过多或者过少
        elif int(series_count_num) < 1 or int(series_count_num) + len(series_start_num) - 1 > 999:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "系列数量错误！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        # 产品数量为0
        elif int(scode_count_num) == 0:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "产品数量错误！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        else:
            # 判断是否存在防伪码保存的文件夹，如果没有则生成
            if not os.path.exists("codepath"):
                os.mkdir("codepath")
            # 生成防伪码
            scodestr = []
            for m in range(int(series_count_num)):
                for j in range(int(scode_count_num)):
                    temp = ''
                    for i in range(6):
                        temp = temp + chr(random.randrange(ord('0'), ord('9') + 1))
                    sql = 'SELECT * FROM fangweima2 WHERE code='+'\''+temp+'\''
                    check = query(sql,None)
                    if check: #检查后可以添加 数据库加入  新生成的文件中加入
                        sql = 'INSERT INTO fangweima2 VALUES(%s);'
                        insert(sql,str(int(series_start_num) + m) + temp)
                        scodestr.append(str(int(series_start_num) + m) + temp)

            # 打开文件并写入防伪码
            with open("codepath/scode-feature2.txt", 'w') as f:
                for item in scodestr:
                    f.write(item + '\n')
            # 提示用户生成成功
            tip_sentence = "已生成9位防伪码共计：" \
                           + str(int(scode_count_num) * int(series_count_num)) \
                           + "\n防伪码文件位于“codepath/scode-feature2.txt”文件下\n请及时备份以防文件被覆盖\n"
            QtWidgets.QMessageBox.information(QtWidgets.QWidget(), "提示", tip_sentence, QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
