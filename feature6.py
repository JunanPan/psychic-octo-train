# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'feature6.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import random
import os
import pymysql
def get_conn():
    conn = pymysql.connect(host='localhost', port=3306, user='root', passwd='root', db='test1')
    return conn

def insert(sql, args):
    conn = get_conn()
    cur = conn.cursor()
    result = cur.execute(sql, args)
    conn.commit()
    cur.close()
    conn.close()
def query(sql,args):
    conn = get_conn()
    cur = conn.cursor()
    cur.execute(sql,args)
    results = cur.fetchall()
    conn.commit()
    cur.close()
    conn.close()
    if results: #已存在 不可添加数据
        return False
    else:#未存在，可以添加数据
        return True


class Ui_window_feature6(object):
    def setupUi(self, window_feature6):
        window_feature6.setObjectName("window_feature6")
        window_feature6.resize(510, 599)
        self.label_title = QtWidgets.QLabel(window_feature6)
        self.label_title.setGeometry(QtCore.QRect(135, 160, 250, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.label_title_2 = QtWidgets.QLabel(window_feature6)
        self.label_title_2.setGeometry(QtCore.QRect(150, 200, 210, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.label_title_2.setFont(font)
        self.label_title_2.setObjectName("label_title_2")
        self.pushButton_select = QtWidgets.QPushButton(window_feature6)
        self.pushButton_select.setGeometry(QtCore.QRect(195, 260, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.pushButton_select.setFont(font)
        self.pushButton_select.setObjectName("pushButton_select")
        self.label_tip_2 = QtWidgets.QLabel(window_feature6)
        self.label_tip_2.setGeometry(QtCore.QRect(10, 320, 360, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.label_tip_2.setFont(font)
        self.label_tip_2.setObjectName("label_tip_2")
        self.lineEdit_codenum = QtWidgets.QLineEdit(window_feature6)
        self.lineEdit_codenum.setGeometry(QtCore.QRect(380, 320, 120, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.lineEdit_codenum.setFont(font)
        self.lineEdit_codenum.setObjectName("lineEdit_codenum")
        self.lineEdit_codenum.setValidator(QtGui.QIntValidator())
        self.pushButton_create = QtWidgets.QPushButton(window_feature6)
        self.pushButton_create.setGeometry(QtCore.QRect(205, 380, 100, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(14)
        self.pushButton_create.setFont(font)
        self.pushButton_create.setObjectName("pushButton_create")
        self.label_tip = QtWidgets.QLabel(window_feature6)
        self.label_tip.setGeometry(QtCore.QRect(330, 270, 170, 20))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(7)
        self.label_tip.setFont(font)
        self.label_tip.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.label_tip.setText("")
        self.label_tip.setObjectName("label_tip")

        # 选择文件
        self.filename = ''
        self.pushButton_select.clicked.connect(lambda: self.select_file(window_feature6))
        # 生成
        self.pushButton_create.clicked.connect(lambda: self.create())

        self.retranslateUi(window_feature6)
        QtCore.QMetaObject.connectSlotsByName(window_feature6)

    def retranslateUi(self, window_feature6):
        _translate = QtCore.QCoreApplication.translate
        window_feature6.setWindowTitle(_translate("window_feature6", "Form"))
        self.label_title.setText(_translate("window_feature6", "后续补加生成防伪码"))
        self.label_title_2.setText(_translate("window_feature6", "（5A62M0583D2）"))
        self.pushButton_select.setText(_translate("window_feature6", "选择文件"))
        self.label_tip_2.setText(_translate("window_feature6", "请输入需要补充生成的防伪码数量:"))
        self.pushButton_create.setText(_translate("window_feature6", "生成"))

    def select_file(self, window_feature6):
        directory = QtWidgets.QFileDialog.getOpenFileName(window_feature6, "选取文件", "./codepath", "Text Files (*.txt)")  # 起始路径
        self.filename = directory[0]
        self.label_tip.setText("已选择" + self.filename.split('/')[-1])

    def create(self):
        #存放之前已经生成的防伪码
        old_scode_list = []
        with open(self.filename, 'r') as f:
            lines = f.readlines()
            for line in lines:
                old_scode_list.append(line.strip('\n'))
        # 获取需要生成的数量
        scode_count_num = int(self.lineEdit_codenum.text())
        if int(scode_count_num) == 0:
            QtWidgets.QMessageBox.warning(QtWidgets.QWidget(), "警告", "数量错误！", QtWidgets.QMessageBox.Yes,
                                          QtWidgets.QMessageBox.Yes)
        else:
            # 判断是否存在防伪码保存的文件夹，如果没有则生成
            if not os.path.exists("codeadd"):
                os.mkdir("codeadd")
            # 获取已生成防伪码的分析吗
            scode_analysis_num = ''
            for item in old_scode_list[0]:
                if item.isalpha():
                    scode_analysis_num = scode_analysis_num + item
            # 集合用于判断新生成的防伪码是否重复
            old_scode_set = set(old_scode_list)
            # 生成防伪码
            scodestr = []
            while scode_count_num:
                # 产生随机插入分析编号的位置
                insert_address = sorted(random.sample("0123456789", 3))
                for i in range(3):
                    insert_address[i] = int(insert_address[i])

                temp = ''
                for j in range(9):
                    temp = temp + chr(random.randrange(ord('0'), ord('9') + 1))
                temp = temp[0:insert_address[0]] + scode_analysis_num[0] \
                       + temp[insert_address[0]:insert_address[1]] + scode_analysis_num[1] \
                       + temp[insert_address[1]:insert_address[2]] + scode_analysis_num[2] \
                       + temp[insert_address[2]:]
                # 判断是否重复
                old_length = len(old_scode_set)
                old_scode_set.add(temp)
                if old_length < len(old_scode_set):
                    # scodestr.append(temp)
                    scode_count_num = scode_count_num - 1
                sql = 'SELECT * FROM fangweima4 WHERE code='+'\''+temp+'\''
                check = query(sql,None)
                if check: #检查后可以添加 数据库加入  新生成的文件中加入
                    sql = 'INSERT INTO fangweima4 VALUES(%s);'
                    insert(sql,temp)
                    scodestr.append(temp)
            # 打开文件并写入防伪码
            with open("codeadd/" + scode_analysis_num + "scode-feature6.txt", 'w') as f:
                for item in scodestr:
                    f.write(item + '\n')
            # 提示用户生成成功
            tip_sentence = "已补充生成含数据分析功能的防伪码共计：" \
                           + str(len(scodestr)) \
                           + "\n防伪码文件位于“codeadd”文件夹下\n请及时备份以防文件被覆盖\n"
            QtWidgets.QMessageBox.information(QtWidgets.QWidget(), "提示", tip_sentence,
                                              QtWidgets.QMessageBox.Yes,
                                              QtWidgets.QMessageBox.Yes)
